Amici> + "stats"
Statistics:  no people, no friendships
Amici> + "add" "A" "Lincoln" "abe"
Amici> + "add" "A" "Blinken" "anthony"
Amici> + "add" "B" "Safe" "safety"
Amici> + "add" "C" "Language" "Crocks"
Amici> + "stats"
Statistics:  4 people, no friendships
Amici> + "friend" "abe" "anthony"
abe and anthony are now friends.
Amici> + "size" "abe"
abe (A Lincoln) has 1 friend
Amici> + "add" "A" "Lincoln" "honest"
Amici> + "add" "A" "Lincoln" "abolitionist"
Amici> + "friend" "honest" "abe"
honest and abe are now friends.
Amici> + "friend" "abe" "honest"
abe and honest are already friends.
Amici> + "friend" "abe" "abolitionist"
abe and abolitionist are now friends.
Amici> + "stats"
Statistics:  6 people, 3 friendships
Amici> + "print" "abe"
abe (A Lincoln) has 3 friends
	anthony (A Blinken)
	honest (A Lincoln)
	abolitionist (A Lincoln)
Amici> + "print" "safety"
safety (B Safe) has no friends
Amici> + "add" "FORTH" "Language" "rpn"
Amici> + "add" "ML" "Language" "functional"
Amici> + "add" "LISP" "Language" "parens!"
error: argument "parens!" is invalid
Amici> + "add" "Erlang" "Language" "concurrent"
Amici> + "add" "Haskell" "Language" "functional"
error: handle "functional" is already in use
Amici> + "print" "Haskell"
error: handle "Haskell" is unknown
Amici> + "friend" "concurrent" "functional"
concurrent and functional are now friends.
Amici> + "friend" "safety" "abe"
safety and abe are now friends.
Amici> + "add" "Haskell" "Language" "monadic"
Amici> + "friend" "safety" "anthony"
safety and anthony are now friends.
Amici> + "friend" "safety" "Crocks"
safety and Crocks are now friends.
Amici> + "friend" "safety" "rpn"
safety and rpn are now friends.
Amici> + "friend" "safety" "functional"
safety and functional are now friends.
Amici> + "friend" "safety" "concurrent"
safety and concurrent are now friends.
Amici> + "unfriend" "abe" "safety"
abe and safety are no longer friends.
Amici> + "print" "safety"
safety (B Safe) has 5 friends
	anthony (A Blinken)
	Crocks (C Language)
	rpn (FORTH Language)
	functional (ML Language)
	concurrent (Erlang Language)
Amici> + "friend" "monadic" "anthony"
monadic and anthony are now friends.
Amici> + "friend" "monadic" "Crocks"
monadic and Crocks are now friends.
Amici> + "friend" "monadic" "rpn"
monadic and rpn are now friends.
Amici> + "friend" "monadic" "functional"
monadic and functional are now friends.
Amici> + "friend" "monadic" "concurrent"
monadic and concurrent are now friends.
Amici> + "stats"
Statistics:  10 people, 14 friendships
Amici> + "unfriend" "safety" "anthony"
safety and anthony are no longer friends.
Amici> + "unfriend" "safety" "Crocks"
safety and Crocks are no longer friends.
Amici> + "unfriend" "safety" "rpn"
safety and rpn are no longer friends.
Amici> + "unfriend" "safety" "functional"
safety and functional are no longer friends.
Amici> + "unfriend" "safety" "concurrent"
safety and concurrent are no longer friends.
Amici> + "unfriend" "abe" "Crocks"
abe and Crocks are not friends.
Amici> + "stats"
Statistics:  10 people, 9 friendships
Amici> + "init"
System re-initialized
Amici> + "stats"
Statistics:  no people, no friendships
Amici> + "quit"
